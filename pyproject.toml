[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "rexlit"
version = "0.1.0"
description = "Offline-first UNIX litigation SDK/CLI for e-discovery and deadline management"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "RexLit Contributors"}
]
keywords = ["litigation", "e-discovery", "legal-tech", "deadline-management", "ocr"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Legal Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Text Processing",
]

dependencies = [
    "typer>=0.12.0",
    "rich>=13.0.0",  # For typer rich output
    "pydantic>=2.8.0",
    "pydantic-settings>=2.4.0",
    "pymupdf>=1.24.0",
    "python-magic>=0.4.27",
    "python-docx>=1.1.0",
    "pillow>=10.4.0",
    "tantivy>=0.22.0",
    "presidio-analyzer>=2.2.354",
    "presidio-anonymizer>=2.2.354",
    "holidays>=0.56",
    "ics>=0.7.2",
    "datasketch>=1.6.5",
    "pyyaml>=6.0.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "mypy>=1.11.0",
    "ruff>=0.6.0",
    "black>=24.8.0",
    "types-pyyaml>=6.0.12",
    "import-linter>=2.0",
]
ocr-paddle = [
    "paddleocr>=2.8.0",
    "paddlepaddle>=2.6.0",
]
ocr-tesseract = [
    "pytesseract>=0.3.10",
]
ocr-deepseek = [
    "httpx>=0.27.0",
]
email = [
    "extract-msg>=0.48.0",
    "mail-parser>=3.15.0",
]
pst = [
    "pypff>=20211114",
]
agent = [
    "anthropic>=0.34.0",
]

[project.scripts]
rexlit = "rexlit.cli:app"

[project.urls]
Homepage = "https://github.com/yourusername/rexlit"
Documentation = "https://github.com/yourusername/rexlit/blob/main/README.md"
Repository = "https://github.com/yourusername/rexlit"
Issues = "https://github.com/yourusername/rexlit/issues"

[tool.hatch.build.targets.wheel]
packages = ["rexlit"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=rexlit",
    "--cov-report=term-missing",
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "tantivy.*",
    "presidio_analyzer.*",
    "presidio_anonymizer.*",
    "datasketch.*",
    "ics.*",
    "magic.*",
    "docx.*",
    "fitz.*",
]
ignore_missing_imports = true

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.importlinter]
root_package = "rexlit"

[[tool.importlinter.contracts]]
name = "CLI depends only on app and bootstrap"
type = "forbidden"
source_modules = ["rexlit.cli"]
forbidden_modules = [
    "rexlit.audit.ledger",
    "rexlit.ingest",
    "rexlit.index",
    "rexlit.ocr",
    "rexlit.pdf",
    "rexlit.rules",
    "rexlit.ediscovery",
]
ignore_imports = []

[[tool.importlinter.contracts]]
name = "Domain packages cannot import adapters or CLI"
type = "forbidden"
source_modules = [
    "rexlit.audit",
    "rexlit.ingest",
    "rexlit.index",
    "rexlit.pdf",
    "rexlit.ocr",
    "rexlit.rules",
    "rexlit.ediscovery",
]
forbidden_modules = [
    "rexlit.cli",
]
ignore_imports = []

[[tool.importlinter.contracts]]
name = "Application layer depends only on ports"
type = "layers"
layers = [
    "rexlit.cli",
    "rexlit.app",
    "rexlit.app.ports",
]
